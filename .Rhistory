#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(openxlsx)
data_de_tesis_prof <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(openxlsx)
data_de_tesis_prof <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
library(openxlsx)
library(openxlsx)
data <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(openxlsx)
data <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data)
anova(modelo)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(agricolae)
library(agricolae)
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
print(tukey_geno)
print(tukey_riego)
<- HSD.test(modelo, c ("riego", "geno"), group = TRUE)
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# Comparación de medias con Tukey para el efecto de 'riego'
tukey_riego
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# Comparación de medias con Tukey para el efecto de 'riego'
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# Comparación de medias con Tukey para la interacción 'riego:geno'
tukey_interaccion <- HSD.test(modelo, c ("riego", "geno"), group = TRUE)
print(tukey_interaccion)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(agricolae)
# Si el ANOVA indica diferencias significativas, procedemos con la comparación de medias
# Comparación de medias con Tukey para el efecto de 'geno'
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
# Comparación de medias con Tukey para el efecto de 'riego'
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
# Comparación de medias con Tukey para la interacción 'riego:geno'
tukey_interaccion <- HSD.test(modelo, c ("riego", "geno"), group = TRUE)
print(tukey_interaccion)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
library(openxlsx)
Data <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
modelo <- lm(formula = hi ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
modelo <- lm(formula = hi ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
modelo <- lm(formula = hi ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
library(openxlsx)
Data <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
library(openxlsx)
Data <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = data_de_tesis_prof)
anova(modelo)
source('https://inkaverse.com/setup.r')
install(inkaverse)
install('https://inkaverse.com/setup.r')
source('https://inkaverse.com/setup.r')
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
source('https://inkaverse.com/setup.r')
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
Data1 <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
library(openxlsx)
Data1 <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
anova(modelo)
plot(modelo)
modelo <- lm(formula = hi ~ bloque + geno + riego + riego*geno, data = Data1)
anova(modelo)
plot(modelo)
install.packages("inkaverse")
source('https://inkaverse.com/setup.r')
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(openxlsx)
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = Data1)
anova(modelo)
plot(modelo)
anova(modelo)
plot(modelo)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
anova(modelo)
plot(modelo)
anova(modelo)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
plot(modelo)
anova(modelo)
anova(modelo)
anova(modelo)
modelo <- aov(formula = hi ~ bloque + geno + riego + riego*geno, data = Data1)
anova(modelo)
plot(modelo)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = hi, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Interacción riego y genotipo", y = "Área foliar (cm^2)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot con interacción de niveles de riego y genotipo")
library(lme4)
library(lme4)
library(lmerTest)
install(lmertest)
install(lmerTest)
install.packages("lmerTest")
library(lmerTest)
library(lme4)
library(lmerTest)
model <- lme4::lmer(lfa ~ riego + geno + riego*geno +
(1|bloque), data = data_de_tesis_prof)
anova(model)
plot(modelo)
ol <- boxplot(lfa ~ riego*geno,data_de_tesis_prof)
ol
anova(model)
plot(modelo)
ol
library(inti)
library(inti)
model <- remove_outliers(data = data_de_tesis_prof
, formula = lfa ~ riego + geno + riego*geno + (1|bloque)
, plot_diag = T
         )
library(inti)
model <- remove_outliers(data = data_de_tesis_prof
, formula = lfa ~ riego + geno + riego*geno + (1|bloque)
, plot_diag = T)
model
library(agricolae)
modelo <- lm(formula = lfa ~ bloque + riego + geno + riego*geno
, data = data_de_tesis_prof)
anova(modelo)
library(agricolae)
tukey_result <- HSD.test(modelo
, c("geno", "riego")
, group = TRUE)
tukey_result
plot(tukey_result)
str(tukey_result)
tukey_result
grupos <- tukey_result$groups %>%
rownames_to_column("tratamientos") %>%
separate(tratamientos, into = c("geno", "riego")
, sep = ":")
str(grupos)
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
labs(x = "Genotipo", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Gráfico de barras: LFA por genotipo y riego") +
geom_text(aes(label = groups, y = lfa + 0.05),
position = position_dodge(width = 0.9),vjust=0)
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = data_de_tesis_prof)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(modelo, ~ geno | riego) %>%
cld(Letters = letters, reversed = T)
library(readxl)
LA_MOLINA_2014_POTATO_WUE_FB_ <- read_excel("LA MOLINA 2014 POTATO WUE (FB).xlsx",
sheet = "fb")
View(LA_MOLINA_2014_POTATO_WUE_FB_)
source('https://inkaverse.com/setup.r')
library(openxlsx)
Data1 <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
#cargamos el paquete ggplot2
library(ggplot2)
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(Data1, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por genotipo y tratamiento de riego")
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
anova(modelo)
anova(modelo)
anova(model)
ol <- boxplot(lfa ~ riego*geno,Data1)
ol
anova(model)
anova(modelo)
library(inti)
model <- remove_outliers(data = Data1
, formula = lfa ~ riego + geno + riego*geno + (1|bloque)
, plot_diag = T)
model
model
library(multcompView)
library(multcompView)
cm1
cm2
cm3
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = Data1)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(modelo, ~ geno | riego) %>%
cld(Letters = letters, reversed = T)
cm1
cm1
cm2
library(lme4)
library(lmerTest)
modelo <- lme4::lmer(lfa ~ riego + geno + riego*geno +
(1|bloque), data = Data1)
anova(modelo)
plot(modelo)
ol <- boxplot(lfa ~ riego*geno,Data1)
ol
plot(modelo)
ol <- boxplot(lfa ~ riego*geno,Data1)
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = Data1)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = Data1)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(modelo, ~ geno | riego) %>%
cld(Letters = letters, reversed = T)
cm1
cm2 <- emmeans(modelo, ~ riego | geno) %>%
cld(Letters = letters, reversed = T)
cm2
cm3 <- emmeans(modelo, ~ riego * geno) %>%
cld(Letters = letters, reversed=3)
cm3
cm1
cm2
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = Data1)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = Data1)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
, data = Data1)
anova(modelo)
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)
library(lme4)
library(lmerTest)
cm1 <- emmeans(modelo, ~ geno | riego) %>%
cld(Letters = letters, reversed = T)
cm1
cm2 <- emmeans(modelo, ~ riego | geno) %>%
cld(Letters = letters, reversed = T)
cm2
cm3 <- emmeans(modelo, ~ riego * geno) %>%
cld(Letters = letters, reversed=3)
# Convertir las medias estimadas a un dataframe
cm1_df <- as.data.frame(cm1)
# Ver el contenido del dataframe para asegurarnos de que tiene las columnas correctas
print(cm1_df)
# Crear el gráfico de barras con los resultados de las medias estimadas de emmeans
ggplot(cm1_df, aes(x = geno, y = emmean, fill = riego)) +  # Cambia "emmean" por la columna de las medias estimadas
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
labs(title = "Comparación de Medias - Medias Estimadas",
x = "Genotipos",
y = "hi") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_fill_discrete(name = "Riego")
str(Data1)
data_de_tesis_prof %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col = "red"
, pch = 21
, stars = TRUE
, scale = FALSE
,lm=TRUE)
library(FactoMineR)
mv <- data_de_tesis_prof %>%
group_by(riego, geno) %>%
summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>%
PCA(scale.unit = T, quali.sup = c(1:4), graph = F)
p1 <- plot(mv
, choix="ind"
, habillage=1)
p2 <- plot(mv
, choix="var")
list(p1, p2) %>%
plot_grid(plotlist=.,nrow=1)
Data1 %>%
select_if(is.numeric) %>%
dplyr::select(!c("block")) %>%
pairs.panels(x = .
, hist.col = "red"
, pch = 21
, stars = TRUE
, scale = FALSE
,lm=TRUE)
library(FactoMineR)
mv <- Data1 %>%
group_by(riego, geno) %>%
summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>%
PCA(scale.unit = T, quali.sup = c(1:4), graph = F)
p1 <- plot(mv
, choix="ind"
, habillage=1)
p2 <- plot(mv
, choix="var")
list(p1, p2) %>%
plot_grid(plotlist=.,nrow=1)
library(FactoMineR)
mv <- Data1 %>%
group_by(riego, geno) %>%
summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>%
PCA(scale.unit = T, quali.sup = c(1:4), graph = F)
p1 <- plot(mv
, choix="ind"
, habillage=1)
p2 <- plot(mv
, choix="var")
list(p1, p2) %>%
plot_grid(plotlist=.,nrow=1)
